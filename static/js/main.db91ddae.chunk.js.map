{"version":3,"sources":["routes.ts","components/LocaleSelector.tsx","components/Icons.tsx","components/ThemeSelector.tsx","components/NavBar.tsx","components/Layout.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","pages/AboutPage.tsx","components/user/LoginForm.tsx","pages/UserLoginPage.tsx","pages/UserProfilePage.tsx","components/user/RecoveryPasswordForm.tsx","pages/UserRecoveryPasswordPage.tsx","pages/AlbumListPage.tsx","components/Card.tsx","pages/AlbumPage.tsx","pages/AlbumPhotoPage.tsx","pages/admin/AdminUserListPage.tsx","pages/admin/AdminUserDetailPage.tsx","pages/admin/AdminHomePage.tsx","Router.tsx","locales/en-GB.ts","App.tsx","index.tsx"],"names":["routes","root","about","login","account","recoverPassword","albums","album","id","albumPhoto","albumId","photoId","admin","users","user","availableLocales","LocaleSelector","className","map","item","key","ThemeIcon","viewBox","version","stroke","strokeWidth","fill","fillRule","d","ThemeSelector","console","log","name","NavBar","f","useIntl","formatMessage","isAdmin","to","Layout","breadcrumbs","children","data-testid","reduce","components","bc","i","push","label","NotFoundPage","HomePage","AboutPage","LoginForm","onLogin","email","password","onSubmit","e","preventDefault","htmlFor","type","placeholder","UserLoginPage","undefined","credentials","UserAccountPage","RecoveryPasswordForm","useState","setEmail","value","onChange","target","UserRecoveryPasswordPage","AlbumListPage","FAKE_ALBUMS","status","title","description","Card","lorem","imageUrl","src","alt","AlbumPage","params","useRouteMatch","FAKE_ALBUM","photos","FAKE_PHOTOS","photo","thumbnailUrl","photosCount","url","AlbumPhotoPage","photoStatus","AdminUserListPage","FAKE_DATA","avatarUrl","thumb","AdminUserDetailPage","AdminHomePage","AppRouter","exact","path","messages","APP_NAME","LOGIN_TITLE","ADMIN_USERS_TITLE","App","locale","en","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db91ddae.chunk.js","sourcesContent":["const routes = {\n  root: () => `/`,\n  about: () => `/about`,\n  login: () => `/login`,\n  account: () => `/account`,\n  recoverPassword: () => `/password-recovery`,\n  albums: () => `/albums`,\n  album: (id: string) => `/albums/${id}`,\n  albumPhoto: (albumId: string, photoId: string) =>\n    `/albums/${albumId}/photo/${photoId}`,\n  admin: {\n    root: () => `/admin`,\n    users: () => `/admin/users`,\n    user: (id: string) => `/admin/users/${id}`,\n  },\n};\n\nexport default routes;\n","import React from \"react\";\n\nconst availableLocales = [\"ca\", \"es\", \"en\"];\n\nconst LocaleSelector: React.FC = () => {\n  const locale = \"en\";\n  return (\n    <div className=\"flex pr-4 border-l\">\n      {availableLocales.map((item) => (\n        <button\n          key={item}\n          className={`px-2 border-r border-muted-light uppercase ${\n            item === locale ? \"text-accent\" : \"\"\n          }`}\n        >\n          {item}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default LocaleSelector;\n","import React from \"react\";\n\ntype Props = {\n  className?: string;\n};\n\nexport const ThemeIcon: React.FC<Props> = ({ className = \"\" }) => (\n  <svg className={className} viewBox=\"0 0 20 20\" version=\"1.1\">\n    <g\n      id=\"Page-1\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    >\n      <g id=\"icon-shape\">\n        <path\n          d=\"M10,2 C14.418278,2 18,5.581722 18,10 C18,14.418278 14.418278,18 10,18 L10,2 Z M10,20 C15.5228475,20 20,15.5228475 20,10 C20,4.4771525 15.5228475,0 10,0 C4.4771525,0 0,4.4771525 0,10 C0,15.5228475 4.4771525,20 10,20 Z\"\n          id=\"Combined-Shape\"\n        ></path>\n      </g>\n    </g>\n  </svg>\n);\n","import React from \"react\";\nimport { ThemeIcon } from \"./Icons\";\n\ntype Props = {\n  className?: string;\n};\n\nconst ThemeSelector: React.FC<Props> = ({ className = \"\" }) => {\n  const theme = \"light\";\n\n  console.log(\"RENDER\", ThemeSelector.name);\n\n  return (\n    <button\n      className={`${className} flex items-center px-4 rounded-full capitalize`}\n    >\n      <ThemeIcon className=\"h-4 w-4 mr-2\" />\n      {theme}\n    </button>\n  );\n};\n\nexport default ThemeSelector;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport LocaleSelector from \"./LocaleSelector\";\nimport ThemeSelector from \"./ThemeSelector\";\nimport { useIntl } from \"react-intl\";\n\ntype Props = {};\n\nconst NavBar: React.FC<Props> = () => {\n  const { formatMessage: f } = useIntl();\n  const user = { admin: true, name: \"user\" };\n  const loggedIn = true;\n  const notLoggedIn = true;\n  const isAdmin = user && user.admin;\n\n  return (\n    <nav className=\"text-muted-light flex items-center w-full bg-header border-b py-2\">\n      <div className=\"mx-4 flex items-center flex-grow\">\n        <Link to=\"/\">\n          <h1 className=\"text-xl\">{f({ id: \"APP_NAME\" })}</h1>\n        </Link>\n        {loggedIn && (\n          <>\n            <Link className=\"ml-4\" to={routes.albums()}>\n              Albums\n            </Link>\n          </>\n        )}\n        {isAdmin && (\n          <>\n            <Link className=\"ml-4\" to={routes.admin.users()}>\n              Users\n            </Link>\n          </>\n        )}\n      </div>\n      {notLoggedIn && (\n        <>\n          <Link className=\"mx-4\" to={routes.about()}>\n            About\n          </Link>\n        </>\n      )}\n      <LocaleSelector />\n      <ThemeSelector className=\"bg-header hover:bg-page hover:text-default\" />\n      {loggedIn && (\n        <div className=\"mr-8\">\n          <Link className=\"ml-4\" to={routes.account()}>\n            {user.name}\n          </Link>\n        </div>\n      )}\n      {notLoggedIn && (\n        <div className=\"mr-8\">\n          <Link className=\"ml-4\" to={routes.login()}>\n            Login\n          </Link>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\n\ntype Breadcrumb = {\n  label: string;\n  to?: string;\n};\n\ntype Props = {\n  breadcrumbs?: Breadcrumb[];\n};\n\nconst Layout: React.FC<Props> = ({ breadcrumbs = [], children }) => {\n  return (\n    <div className=\"flex flex-col text-default\">\n      <NavBar />\n      <div className=\"container mx-auto my-16 px-4\">\n        <div className=\"flex text-muted\" data-testid=\"breadcrumbs\">\n          {breadcrumbs.reduce((components, bc, i) => {\n            if (i > 0) {\n              components.push(\n                <label key={\"separator-\" + i} className=\"px-2\">\n                  {\"/\"}\n                </label>\n              );\n            }\n            if (bc.to) {\n              components.push(\n                <Link key={bc.label} className=\"text-accent\" to={bc.to}>\n                  {bc.label}\n                </Link>\n              );\n            } else {\n              components.push(<label key={bc.label}>{bc.label}</label>);\n            }\n\n            return components;\n          }, [] as JSX.Element[])}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nconst NotFoundPage: React.FC = () => <Layout>NotFoundPage</Layout>;\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nconst HomePage: React.FC = () => {\n  console.log(\"RENDER\", HomePage.name);\n\n  return (\n    <Layout>\n      <h1 className=\"text-4xl\">HomePage</h1>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport routes from \"../routes\";\n\nconst AboutPage: React.FC = () => {\n  console.log(\"RENDER\", AboutPage.name);\n  return (\n    <Layout breadcrumbs={[{ label: \"home\", to: routes.root() }]}>\n      <h1 className=\"text-4xl\">AboutPage</h1>\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\nimport routes from \"../../routes\";\n\nexport type LoginData = {\n  email: string;\n  password: string;\n};\n\ntype Props = {\n  onLogin: (data: LoginData) => void;\n};\nconst LoginForm: React.FC<Props> = ({ onLogin }) => {\n  const { formatMessage: f } = useIntl();\n  const email = { error: \"\" };\n  const password = { error: \"\" };\n\n  return (\n    <form\n      data-testid=\"LoginForm\"\n      className=\"flex flex-col max-w-sm mx-auto bg-card rounded p-4\"\n      onSubmit={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <h1 className=\"font-medium text-2xl mb-4\">{f({ id: \"LOGIN_TITLE\" })}</h1>\n      <div className=\"py-2 flex flex-col\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          name=\"email\"\n          type=\"text\"\n          className=\"p-2 border border-muted-light bg-page\"\n          placeholder=\"email@example.com\"\n        />\n        {email.error && <div className=\"text-error mt-1\">{email.error}</div>}\n      </div>\n      <div className=\"py-2 flex flex-col\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          name=\"password\"\n          type=\"password\"\n          className=\"p-2 border border-muted-light my-1 bg-page\"\n          placeholder=\"Password here\"\n        />\n        {password.error && (\n          <div className=\"text-error mt-1\">{password.error}</div>\n        )}\n      </div>\n      <div className=\"mt-4 flex items-center\">\n        <button className=\"btn\" type=\"submit\">\n          Login\n        </button>\n        <Link className=\"ml-4\" to={routes.recoverPassword()}>\n          Forgot password\n        </Link>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n\n// const { register, handleSubmit, errors } = useForm<LoginData>();\n// const email = useInput(validation({ isRequired: \"Email is required\" }));\n// const password = useInput(validation({ isRequired: \"Password is required\" }));\n\n// const handleLogin = (e: FormEvent<HTMLFormElement>) => {\n//   e.preventDefault();\n//   if (email.isValid() && password.isValid()) {\n//     console.log(email, password);\n//   }\n// };\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport LoginForm from \"../components/user/LoginForm\";\n\nconst UserLoginPage: React.FC = () => {\n  const { user } = {\n    user: undefined,\n  };\n\n  if (user) return null;\n\n  return (\n    <Layout>\n      <LoginForm onLogin={(credentials) => console.log(\"LOGIN\", credentials)} />\n    </Layout>\n  );\n};\n\nexport default UserLoginPage;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nconst UserAccountPage: React.FC = () => {\n  console.log(\"RENDER\", UserAccountPage.name);\n  const user = { admin: true, name: \"Username\" };\n\n  return (\n    <Layout>\n      <div>\n        <div className=\"mb-8\">\n          {user.admin && <div className=\"font-medium\">Administrator</div>}\n          <h1 className=\"font-medium text-2xl\">{user.name}</h1>\n        </div>\n        <button className=\"btn\">Logout</button>\n      </div>\n    </Layout>\n  );\n};\n\nexport default UserAccountPage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {};\n\nconst RecoveryPasswordForm: React.FC<Props> = () => {\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <form\n      className=\"flex flex-col max-w-sm mx-auto bg-card rounded p-4\"\n      onSubmit={(e) => e.preventDefault()}\n    >\n      <h1 className=\"font-medium text-2xl mb-4\">Recover password</h1>\n      <div className=\"py-2 flex flex-col\">\n        <label>Email</label>\n        <input\n          className=\"p-2 border border-muted-light my-1\"\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4 flex items-center\">\n        <button className=\"btn\" type=\"submit\">\n          Send recovery\n        </button>\n        <Link className=\"ml-4\" to=\"/forgot-password\">\n          Back to login\n        </Link>\n      </div>\n    </form>\n  );\n};\n\nexport default RecoveryPasswordForm;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport RecoveryPasswordForm from \"../components/user/RecoveryPasswordForm\";\n\nconst UserRecoveryPasswordPage: React.FC = () => {\n  console.log(\"RENDER\", UserRecoveryPasswordPage.name);\n  return (\n    <Layout>\n      <RecoveryPasswordForm />\n    </Layout>\n  );\n};\n\nexport default UserRecoveryPasswordPage;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Spinner from \"../components/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport { AlbumListItem } from \"../api/types\";\n\nconst AlbumListPage: React.FC = () => {\n  const albums: AlbumListItem[] = FAKE_ALBUMS;\n  const status: string = \"success\";\n\n  console.log(\"RENDER\", AlbumListPage.name);\n\n  return (\n    <Layout breadcrumbs={[{ label: \"home\", to: routes.root() }]}>\n      <h1 className=\"text-4xl mb-4\">Albums</h1>\n      {status === \"loading\" && <Spinner />}\n      {albums &&\n        albums.map((album) => (\n          <Link key={album.id} to={routes.album(album.id)}>\n            <div className=\"flex flex-col p-4 my-4 bg-card rounded shadow-sm\">\n              <h2 className=\"text-accent text-2xl capitalize\">{album.title}</h2>\n              <p className=\"my-4\">{album.description}</p>\n            </div>\n          </Link>\n        ))}\n    </Layout>\n  );\n};\n\nexport default AlbumListPage;\n\n// const { data: albums, status } = useQuery([\"albums\"], () =>\n//   api.albums.list()\n// );\n\nconst FAKE_ALBUMS = [\n  {\n    id: \"1\",\n    title: \"et libero quasi\",\n    description:\n      \"tenetur ut quis\\naspernatur ad vero itaque sit architecto excepturi omnis\\nomnis repellendus maiores\\nvel dolores unde omnis\",\n  },\n  {\n    id: \"2\",\n    title: \"in eos occaecati recusandae quia velit aut consectetur\",\n    description:\n      \"in est ea mollitia dolores consequatur\\nqui est fugit magnam saepe ab praesentium omnis et\\na atque eos voluptatem et et natus perspiciatis\\nlaborum corporis blanditiis rerum adipisci voluptatem\",\n  },\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  className?: string;\n  title: string;\n  to?: string;\n  lorem?: string;\n  imageUrl: string;\n};\n\nconst Card: React.FC<Props> = ({ className, title, lorem, imageUrl, to }) => (\n  <div\n    className={`${className} bg-card max-w-xs rounded overflow-hidden shadow-lg mr-4 mb-4`}\n  >\n    <img className=\"w-full\" src={imageUrl} alt={title} />\n    <div className=\"px-6 py-4\">\n      <div className=\"font-bold text-xl mb-2\">\n        {to ? <Link to={to}>{title}</Link> : title}\n      </div>\n      {lorem && <p className=\"text-gray-700 text-base\">{lorem}</p>}\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport routes from \"../routes\";\nimport LoadingPage from \"./LoadingPage\";\nimport { Album, Photo } from \"../api/types\";\n\ntype RouteParams = {\n  id: string;\n};\n\nconst AlbumPage: React.FC = () => {\n  const { params } = useRouteMatch<RouteParams>();\n  const album: Album = FAKE_ALBUM;\n  const albumStatus: string = \"\";\n  const photos: Photo[] = FAKE_PHOTOS;\n  const photosStatus: string = \"\";\n\n  console.log(\"RENDER\", AlbumPage.name, params);\n\n  if (albumStatus === \"loading\" && photosStatus === \"loading\")\n    return <LoadingPage />;\n\n  return (\n    <Layout\n      breadcrumbs={[\n        { label: \"home\", to: routes.root() },\n        { label: \"albums\", to: routes.albums() },\n        { label: \"album\" },\n      ]}\n    >\n      <h1 className=\"text-4xl mb-4\">\n        {(album && album.title) || \"Loading...\"}\n      </h1>\n      <div className=\"flex flex-wrap\">\n        {photos &&\n          photos.map((photo) => (\n            <Link\n              key={photo.id}\n              className=\"w-1/5\"\n              to={routes.albumPhoto(photo.albumId, photo.id)}\n            >\n              <Card title={photo.title} imageUrl={photo.thumbnailUrl} />\n            </Link>\n          ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default AlbumPage;\n\n// const { data: album, status: albumStatus } = useQuery(\n//   [\"album\", { id: params.id }],\n//   (_, params) => api.albums.get(params)\n// );\n// const { data: photos, status: photosStatus } = useQuery(\n//   [\"photos\", { albumId: params.id }],\n//   (_, params) => api.albums.photos.list(params)\n// );\n\nconst FAKE_ALBUM = {\n  id: \"1\",\n  title: \"et libero quasi\",\n  description: \"\",\n  photosCount: 0,\n};\n\nconst FAKE_PHOTOS = [\n  {\n    id: \"1\",\n    albumId: \"1\",\n    title: \"quirem\",\n    url: \"http://placehold.it/600/a15aae\",\n    thumbnailUrl: \"http://placehold.it/150/a15aae\",\n  },\n  {\n    id: \"2\",\n    albumId: \"1\",\n    title: \"repud\",\n    url: \"http://placehold.it/600/993671\",\n    thumbnailUrl: \"http://placehold.it/150/993671\",\n  },\n];\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport Spinner from \"../components/Spinner\";\nimport { Album, Photo } from \"../api/types\";\n\ntype RouteParams = {\n  albumId: string;\n  photoId: string;\n};\n\nconst AlbumPhotoPage: React.FC = () => {\n  console.log(\"RENDER\", AlbumPhotoPage.name);\n\n  const { params } = useRouteMatch<RouteParams>();\n  const album: Album = FAKE_ALBUM;\n  const photo: Photo = params.photoId === \"2\" ? FAKE_PHOTOS[1] : FAKE_PHOTOS[0];\n  const photoStatus: string = \"\";\n\n  return (\n    <Layout\n      breadcrumbs={[\n        { label: \"home\", to: routes.root() },\n        { label: \"albums\", to: routes.albums() },\n        {\n          label: album ? album.title : \"album\",\n          to: routes.album(params.albumId),\n        },\n        { label: \"photo\" },\n      ]}\n    >\n      <h1 className=\"text-4xl mb-4\">{photo ? photo.title : \"Loading...\"}</h1>\n      {photoStatus === \"loading\" && <Spinner />}\n      {photo && (\n        <div>\n          <img src={photo.url} alt={photo.title} />\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default AlbumPhotoPage;\n\n// const { data: album } = useQuery(\n//   [\"album\", { id: params.albumId }],\n//   (_, params) => api.albums.get(params)\n// );\n// const { data: photo, status: photoStatus } = useQuery(\n//   [\"album\", { albumId: params.albumId, id: params.photoId }],\n//   (_, params) => api.albums.photos.get(params)\n// );\n\nconst FAKE_ALBUM = {\n  id: \"1\",\n  title: \"et libero quasi\",\n  description: \"\",\n  photosCount: 2,\n};\n\nconst FAKE_PHOTOS = [\n  {\n    id: \"1\",\n    albumId: \"1\",\n    title: \"quirem\",\n    url: \"http://placehold.it/600/a15aae\",\n    thumbnailUrl: \"http://placehold.it/150/a15aae\",\n  },\n  {\n    id: \"2\",\n    albumId: \"1\",\n    title: \"repud\",\n    url: \"http://placehold.it/600/993671\",\n    thumbnailUrl: \"http://placehold.it/150/993671\",\n  },\n];\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Spinner from \"../../components/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { useIntl } from \"react-intl\";\n\nconst AdminUserListPage: React.FC = () => {\n  const { formatMessage: f } = useIntl();\n\n  const users = FAKE_DATA;\n  const status: string = \"loaded\";\n\n  console.log(\"RENDER\", AdminUserListPage.name);\n\n  return (\n    <Layout\n      breadcrumbs={[\n        { label: \"admin\", to: routes.admin.root() },\n        { label: \"users\" },\n      ]}\n    >\n      <h1 className=\"text-4xl mb-4\">{f({ id: \"ADMIN_USERS_TITLE\" })}</h1>\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"text-left border-b border-muted\">\n            <th className=\"py-2\">Avatar</th>\n            <th className=\"py-2\">Name</th>\n            <th className=\"py-2\">Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          {status === \"loading\" && <Spinner />}\n          {users &&\n            users.map((user) => (\n              <tr className=\"border-b border-muted\" key={user.id}>\n                <td className=\"py-2\">\n                  <img\n                    className=\"rounded-full\"\n                    src={user.avatarUrl.thumb}\n                    alt={user.name}\n                  />\n                </td>\n                <td className=\"py-2\">\n                  <Link\n                    to={routes.admin.user(user.id)}\n                    className=\"text-accent hover:underline\"\n                  >\n                    {user.name}\n                  </Link>\n                </td>\n                <td className=\"py-2\">{user.email}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default AdminUserListPage;\n\n// const { data: users, status } = useQuery([\"users\"], () => api.users.list());\n\nconst FAKE_DATA = [\n  {\n    id: \"1\",\n    name: \"Aurelie Erdman\",\n    email: \"Ollie.Satterfield@addie.biz\",\n    avatarUrl: { thumb: \"http://placehold.it/40/aaaaaa\" },\n  },\n  {\n    id: \"2\",\n    name: \"Elmo Weissnat\",\n    email: \"Blair@roxane.me\",\n    avatarUrl: { thumb: \"http://placehold.it/40/aaaaaa\" },\n  },\n];\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport LoadingPage from \"../LoadingPage\";\n\ntype RouteParams = {\n  id: string;\n};\n\nconst AdminUserDetailPage: React.FC = () => {\n  const { params } = useRouteMatch<RouteParams>();\n  const user = FAKE_DATA;\n  const status: string = \"\";\n\n  console.log(\"RENDER\", AdminUserDetailPage.name, params);\n\n  if (status === \"loading\") return <LoadingPage />;\n\n  return (\n    <Layout\n      breadcrumbs={[\n        { label: \"admin\", to: routes.admin.root() },\n        { label: \"users\", to: routes.admin.users() },\n        { label: \"user\" },\n      ]}\n    >\n      <h1 className=\"text-4xl mb-4\">{user && user.name}</h1>\n      <div>{user && user.email}</div>\n    </Layout>\n  );\n};\n\nexport default AdminUserDetailPage;\n\nconst FAKE_DATA = {\n  id: \"1\",\n  name: \"Grace Hopper\",\n  email: \"grace.hopper@nasa.gov\",\n};\n","import React from \"react\";\nimport Layout from \"../../components/Layout\";\n\nconst AdminHomePage: React.FC = () => {\n  console.log(\"RENDER\", AdminHomePage.name);\n  return (\n    <Layout breadcrumbs={[{ label: \"admin\" }]}>\n      <h1 className=\"text-4xl\">AdminHomePage</h1>\n    </Layout>\n  );\n};\n\nexport default AdminHomePage;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport UserLoginPage from \"./pages/UserLoginPage\";\nimport UserAccountPage from \"./pages/UserProfilePage\";\nimport UserRecoveryPasswordPage from \"./pages/UserRecoveryPasswordPage\";\nimport AlbumListPage from \"./pages/AlbumListPage\";\nimport AlbumPage from \"./pages/AlbumPage\";\nimport AlbumPhotoPage from \"./pages/AlbumPhotoPage\";\nimport AdminUserListPage from \"./pages/admin/AdminUserListPage\";\nimport AdminUserDetailPage from \"./pages/admin/AdminUserDetailPage\";\nimport AdminHomePage from \"./pages/admin/AdminHomePage\";\n\nconst AppRouter: React.FC = () => {\n  const loggedIn = true;\n  const admin = true;\n  console.log(\"RENDER\", AppRouter.name);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={routes.about()}>\n          <AboutPage />\n        </Route>\n        {admin && (\n          <Route path=\"/admin\">\n            <Switch>\n              <Route exact path={routes.admin.root()}>\n                <AdminHomePage />\n              </Route>\n              <Route exact path={routes.admin.users()}>\n                <AdminUserListPage />\n              </Route>\n              <Route exact path={routes.admin.user(\":id\")}>\n                <AdminUserDetailPage />\n              </Route>\n              <Route path=\"*\">\n                <NotFoundPage />\n              </Route>\n            </Switch>\n          </Route>\n        )}\n        {loggedIn && (\n          <Switch>\n            <Route exact path={routes.root()}>\n              <HomePage />\n            </Route>\n            <Route exact path={routes.account()}>\n              <UserAccountPage />\n            </Route>\n            <Route exact path={routes.albums()}>\n              <AlbumListPage />\n            </Route>\n            <Route exact path={routes.album(\":id\")}>\n              <AlbumPage />\n            </Route>\n            <Route exact path={routes.albumPhoto(\":albumId\", \":photoId\")}>\n              <AlbumPhotoPage />\n            </Route>\n            {/* <Route exact path={routes.login()}>\n              <Redirect to={routes.root()} />\n            </Route> */}\n            {/* <Route path=\"*\">\n              <NotFoundPage />\n            </Route> */}\n            <Route exact path={routes.recoverPassword()}>\n              <UserRecoveryPasswordPage />\n            </Route>\n            <Route exact to={routes.login()}>\n              <UserLoginPage />\n            </Route>\n          </Switch>\n        )}\n        {!loggedIn && (\n          <Switch>\n            {/* <Route path=\"*\">\n            <Redirect to={routes.login()} />\n          </Route> */}\n          </Switch>\n        )}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import { Locale } from \"./types\";\n\nconst messages: Locale = {\n  APP_NAME: \"Hooks\",\n  LOGIN_TITLE: \"Login\",\n  ADMIN_USERS_TITLE: \"User list\",\n};\n\nexport default messages;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport { IntlProvider } from \"react-intl\";\nimport en from \"./locales/en-GB\";\n\nconst App: React.FC = () => {\n  console.log(\"RENDER\", App.name);\n  return (\n    <IntlProvider locale=\"en\" messages={en}>\n      <Router />\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/output.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}